export async function handler() {
    console.log("üì° –ó–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤ –≤–∞–ª—é—Ç...");

    try {
        console.log("‚û°Ô∏è –û—Ç—Ä–∏–º—É—é –∫—É—Ä—Å USD...");
        const usdRes = await fetch("https://api.nbp.pl/api/exchangerates/rates/c/usd/?format=json");
        console.log("üì• –°—Ç–∞—Ç—É—Å USD:", usdRes.status);
        const usdData = await usdRes.json();
        console.log("‚úÖ –ö—É—Ä—Å USD –æ—Ç—Ä–∏–º–∞–Ω–æ:", usdData);

        console.log("‚û°Ô∏è –û—Ç—Ä–∏–º—É—é –∫—É—Ä—Å EUR...");
        const eurRes = await fetch("https://api.nbp.pl/api/exchangerates/rates/c/eur/?format=json");
        console.log("üì• –°—Ç–∞—Ç—É—Å EUR:", eurRes.status);
        const eurData = await eurRes.json();
        console.log("‚úÖ –ö—É—Ä—Å EUR –æ—Ç—Ä–∏–º–∞–Ω–æ:", eurData);

        const result = {
            usd: { buy: usdData.rates[0].bid, sell: usdData.rates[0].ask },
            eur: { buy: eurData.rates[0].bid, sell: eurData.rates[0].ask }
        };

        console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É:", result);

        return {
            statusCode: 200,
            body: JSON.stringify(result)
        };
    } catch (err) {
        console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—É—Ä—Å—ñ–≤:", err);

        return {
            statusCode: 500,
            body: JSON.stringify({
                error: "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫—É—Ä—Å–∏ –≤–∞–ª—é—Ç",
                details: err.message
            })
        };
    }
}
